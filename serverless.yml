service: aws-lambda-dynamodb-reto
frameworkVersion: '3'

plugins:
  - serverless-offline

provider:
  name: aws
  runtime: nodejs14.x
  region: us-west-2
  iamRoleStatements:
    - Effect: Allow
      Action: 
        - dynamodb:*
      Resource:
          - arn:aws:dynamodb:us-west-2:842368770922:table/PlanetTable  

functions:
  CrearPlanetaController:
    handler: src/controller/CrearPlanetaController.CrearPlanetaController
    events:
      - httpApi:
          path: /planet
          method: post 
  ObtenerPlanetaController:
    handler: src/controller/ObtenerPlanetaController.ObtenerPlanetaController
    events:
      - httpApi:
          path: /planet/{id}
          method: get
  ObtenerPlanetasController:
    handler: src/controller/ObtenerPlanetasController.ObtenerPlanetasController
    events:
      - httpApi:
          path: /planets
          method: get
          
  ActualizarPlanetaController:
    handler: src/controller/ActualizarPlanetaController.ActualizarPlanetaController
    events:
      - httpApi:
          path: /planet/{id}
          method: put
  EliminarPlanetaController:
    handler: src/controller/EliminarPlanetaController.EliminarPlanetaController
    events:
      - httpApi:
          path: /planet/{id}
          method: delete
  SwapiController:
    handler: src/controller/SwapiController.SwapiController
    events:
      - httpApi:
          path: /swapi-planets/{id}
          method: get 

resources:
  Resources:
    PlanetTable:
      Type: AWS::DynamoDB::Table
      Properties:
        TableName: PlanetTable
        BillingMode: PAY_PER_REQUEST
        AttributeDefinitions:
          - AttributeName: id
            AttributeType: S
        KeySchema:
          - AttributeName: id
            KeyType: HASH 